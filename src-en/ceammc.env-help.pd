#N canvas 0 0 760 555 12;
#X obj 20 53 ui.link @title index @url ../index-help.pd;
#X text 62 50 ::;
#X obj 79 53 ui.link @title ceammc @url ceammc-help.pd;
#X obj 30 116 env.adsr~;
#X text 200 116 ADSR (Attack \, Decay \, Sustain \, Release) envelope
generator;
#X obj 30 143 env.ar~;
#X text 200 143 Attack/Release envelope generator;
#X obj 30 170 env.asr~;
#X text 200 170 Attack/Sustain/Release envelope generator;
#X obj 30 197 env.concat;
#X text 200 197 Envelope concatenation;
#X obj 30 224 env.follow~;
#X text 200 224 Envelope follower with independent attack and release
times;
#X obj 30 251 env.mix;
#X text 200 251 Mix between two envelopes. Envelopes should contain
equal number of segments;
#X obj 30 291 env.smooth~;
#X text 200 291 An envelope with an exponential attack and release;
#X obj 30 318 env.tscale;
#X text 200 318 Envelope time-scale;
#X obj 30 345 env.tshift;
#X text 200 345 Envelope time-shift (horizontal);
#X obj 30 372 env.vscale;
#X text 200 372 Envelope value-scale;
#X obj 30 399 env2array;
#X text 200 399 Renders envelope to specified array;
#X obj 30 426 env2vline;
#X text 200 426 Converts envelope to bunch of vline messages;
#X obj 30 453 envelope;
#X text 200 453 Envelope data type;
#X obj 30 480 vline2env;
#X text 200 480 Converts vline messages to env;
#X obj 1 1 cnv 5 740 40 empty empty ceammc::env 20 20 0 20 -104026
-4096 0;
#X obj 1 513 cnv 5 740 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 523 library: ceammc;