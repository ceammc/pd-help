#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 622 50 cnv 1 143 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 622 50 Envelope data type;
#X obj 1 1 cnv 5 765 40 empty empty envelope 20 20 0 20 -104026 -4096
0;
#X obj 635 11 env;
#X obj 682 11 envelope;
#X obj 210 80 cnv 1 555 190 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Data type for sound envelope. Contains points specified
by time and value. Points could have stop property - to execute oly
part of envelope and stop on this point. So multisegment envelopes
could be created;
#X text 215 150 Point also has segment type property \, that defines
following segment curve - it could be *step* \, *line* (default) or
*exp* (exponential);
#X text 215 205 Exponential segment also has curve property: if 0 -
(linear) <0 (concave \, negatively curved) >0 (convex \, positively
curved);
#X msg 50 298 ar 100 200 \, bang;
#X msg 232 298 exp 0 30 -2 1 100 -4 0 40 4 0.5 30 2 0 \, bang;
#X msg 69 327 adsr 10 30 60 150 \, bang;
#X msg 318 327 line 0.1 40 0.9 20 0.3 60 0 \, bang;
#X msg 88 356 ear 10 -2 60 -2 \, bang;
#X msg 318 356 sigmoid 0 40 14 1 100 8 0 \, bang;
#X msg 107 385 eadsr 20 -5 70 -12 30 100 -7 \, bang;
#X msg 462 385 sin2 0 80 1 80 0 \, bang;
#X obj 50 414 envelope;
#X obj 50 442 env->array env_arr;
#N canvas 0 22 450 300 (subpatch) 0;
#X array env_arr 100 float 1;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 100 0 400 100 1;
#X restore 50 485 graph;
#X obj 20 607 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 612 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 647 1\.;
#X text 150 647 list;
#X obj 246 648 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 647 adsr: ADSR envelope: attack(ms) \, decay(ms) \, sustain(%)
\, release(ms).;
#X text 110 682 2\.;
#X text 150 682 list;
#X obj 246 683 cnv 1 31 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 682 asr: ASR envelope: attack(ms) \, release(ms) - with
sustain stop point.;
#X text 110 717 3\.;
#X text 150 717 list;
#X obj 246 718 cnv 1 24 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 717 ar: AR envelope: attack(ms) \, release(ms).;
#X text 110 737 4\.;
#X text 150 737 list;
#X obj 246 738 cnv 1 47 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 737 eadsr: exponential ADSR envelope: attack(ms) \, attack_curve
\, decay(ms) \, decay_curve \, sustain(%) \, release(ms) \, release_curve.;
#X text 110 787 5\.;
#X text 150 787 list;
#X obj 246 788 cnv 1 39 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 787 easr: exponential ASR envelope: attack(ms) \, attack_curve
\, release(ms) \, release_curve - with sustain stop point.;
#X text 110 822 6\.;
#X text 150 822 list;
#X obj 246 823 cnv 1 31 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 822 ear: exponential ASR envelope: attack(ms) \, attack_curve
\, release(ms) \, release_curve - no sustain point.;
#X obj 20 867 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 872 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 907 @length;
#X text 245 907 (readonly) Get total envelope time length. Type: float.
Units: ms. Default value: 0\. Min value: 0\.;
#X msg 110 949 @npoints;
#X text 245 949 (readonly) Get number of points. Type: int. Default
value: 0\. Min value: 0\.;
#X msg 110 991 @points;
#X text 245 991 (readonly) Get list of point times (ms). Type: list.;
#X msg 110 1020 @stops;
#X text 245 1020 (readonly) Get list of stop points. Type: list.;
#X msg 110 1049 @values;
#X text 245 1049 (readonly) Get list of point values. Type: list.;
#X obj 20 1088 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1093 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1128 add_point;
#X text 245 1128 add envelope point. Arguments are:;
#X obj 255 1151 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1151 MS: point time. Type: float. Min value: 0\.;
#X obj 255 1174 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1174 VALUE: point value. Type: float.;
#X obj 255 1197 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1197 [IS_STOP=0]: is stop point. Type: int. Allowed values:
0 \, 1\.;
#X obj 255 1220 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1220 [TYPE=line]: segment type: step \, linear \, exponential
\, sin^2 or sigmoid curve. Type: symbol. Allowed values: step \, line
\, exp \, sin2 \, sigmoid.;
#X obj 255 1273 cnv 1 70 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1273 [CURVE=1]: exponential curve degree: 0 (linear) <0
(concave \, negatively curved) >0 (convex \, positively curved). Type:
float.;
#X msg 110 1328 add_seg;
#X text 245 1328 add segment to the end of envelope. On empty envelope
adds start point at 0ms and 0 value. Arguments are:;
#X obj 255 1366 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1366 TYPE: segment type. Type: symbol. Allowed values:
step \, line \, sin2 \, exp \, sigmoid.;
#X obj 255 1404 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1404 MS: segment length. Type: float.;
#X obj 255 1427 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1427 VALUE: end segment value. Type: float.;
#X obj 255 1450 cnv 1 70 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1450 [CURVE=0]: curve (for exp and sigmoid type). Type:
float.;
#X msg 110 1475 adsr;
#X text 245 1475 creates ADSR envelope with one stop point. Arguments
are:;
#X obj 255 1498 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1498 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 1521 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1521 MS: decay time. Type: float. Min value: 0\.;
#X obj 255 1544 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1544 %: sustain level. Type: float. Range: 0\...100\.;
#X obj 255 1567 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1567 MS: release time. Type: float. Min value: 0\.;
#X msg 110 1592 ar;
#X text 245 1592 creates AR envelope without stop points. Arguments
are:;
#X obj 255 1615 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1615 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 1638 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1638 MS: release time. Type: float. Min value: 0\.;
#X msg 110 1663 asr;
#X text 245 1663 creates ASR envelope with one stop point. Arguments
are:;
#X obj 255 1686 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1686 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 1709 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1709 MS: release time. Type: float. Min value: 0\.;
#X msg 110 1734 clear;
#X text 245 1734 remove all envelope points.;
#X msg 110 1761 eadsr;
#X text 245 1761 creates exponential ADSR envelope with one stop point.
Arguments are:;
#X obj 255 1799 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1799 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 1822 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1822 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 1845 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1845 MS: decay time. Type: float. Min value: 0\.;
#X obj 255 1868 cnv 1 90 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1868 DECAY_CURVE: decay segment curve. Type: float.;
#X obj 255 1891 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1891 %: sustain level. Type: float. Range: 0\...100\.;
#X obj 255 1914 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1914 MS: release time. Type: float. Min value: 0\.;
#X obj 255 1937 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1937 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 1962 ear;
#X text 245 1962 creates exponential AR envelope without stop points.
Arguments are:;
#X obj 255 2000 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2000 MS: attack time. Type: float.;
#X obj 255 2023 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2023 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2046 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2046 MS: release time. Type: float.;
#X obj 255 2069 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2069 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2094 easr;
#X text 245 2094 creates exponential AR envelope with one stop point.
Arguments are:;
#X obj 255 2132 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2132 MS: attack time. Type: float. Min value: 0\.;
#X obj 255 2155 cnv 1 98 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2155 ATTACK_CURVE: attack segment curve. Type: float.;
#X obj 255 2178 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2178 MS: release time. Type: float. Min value: 0\.;
#X obj 255 2201 cnv 1 105 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2201 RELEASE_CURVE: release segment curve. Type: float.;
#X msg 110 2226 exp;
#X text 245 2226 creates exponential-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 2264 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2264 VAL0: begin value. Type: float.;
#X obj 255 2287 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2287 MS: line length. Type: float. Min value: 1\.;
#X obj 255 2310 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2310 CURVE0: segment curve. Type: float.;
#X obj 255 2333 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2333 VAL1: value. Type: float.;
#X obj 255 2356 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2356 [LEN1]: segment length. Type: float.;
#X obj 255 2379 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2379 [CURVE1]: segment curve. Type: float.;
#X obj 255 2402 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2402 [VAL2]: value. Type: float.;
#X msg 110 2427 line;
#X text 245 2427 creates line-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 2465 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2465 VAL0: begin value. Type: float.;
#X obj 255 2488 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2488 MS: line length. Type: float. Min value: 1\.;
#X obj 255 2511 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2511 VAL1: value. Type: float.;
#X obj 255 2534 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2534 [LEN1]: segment length. Type: float.;
#X obj 255 2557 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2557 [VAL2]: value. Type: float.;
#X msg 110 2582 remove_point;
#X text 245 2582 remove envelope point by specified time. Arguments
are:;
#X obj 255 2605 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2605 IDX: point index. Type: int. Min value: 0\.;
#X msg 110 2630 set_point;
#X text 245 2630 set point time and value. Arguments are:;
#X obj 255 2653 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2653 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2676 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2676 MS: point time. Type: float. Min value: 0\.;
#X obj 255 2699 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2699 VALUE: point value. Type: int. Min value: 0\.;
#X obj 255 2722 cnv 1 85 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2722 [IS_STOP=0]: stop point. Type: int. Allowed values:
0 \, 1\.;
#X msg 110 2747 set_point_time;
#X text 245 2747 set point time. Arguments are:;
#X obj 255 2770 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2770 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2793 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2793 MS: point time. Type: float. Min value: 0\.;
#X msg 110 2818 set_point_value;
#X text 245 2818 set point time. Arguments are:;
#X obj 255 2841 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2841 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 2864 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2864 VALUE: point value. Type: int. Min value: 0\.;
#X msg 110 2889 set_seg_type;
#X text 245 2889 set segment type. Arguments are:;
#X obj 255 2912 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2912 IDX: segment index \, starting from 0\. Type: int.
Min value: 0\.;
#X obj 255 2950 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 2950 TYPE: segment type. Type: symbol. Allowed values:
step \, line \, sin2 \, exp \, sigmoid.;
#X msg 110 2990 set_stop_point;
#X text 245 2990 set stop-point. Arguments are:;
#X obj 255 3013 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3013 IDX: point index. Type: int. Min value: 0\.;
#X obj 255 3036 cnv 1 59 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3036 IS_STOP: stop point. Type: int. Allowed values: 0
\, 1\.;
#X msg 110 3061 sigmoid;
#X text 245 3061 creates sigmoid-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3099 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3099 VAL0: begin value. Type: float.;
#X obj 255 3122 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3122 MS: line length. Type: float. Min value: 1\.;
#X obj 255 3145 cnv 1 52 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3145 CURVE0: segment curve. Type: float.;
#X obj 255 3168 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3168 VAL1: value. Type: float.;
#X obj 255 3191 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3191 [LEN1]: segment length. Type: float.;
#X obj 255 3214 cnv 1 62 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3214 [CURVE1]: segment curve. Type: float.;
#X obj 255 3237 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3237 [VAL2]: value. Type: float.;
#X msg 110 3262 sin2;
#X text 245 3262 creates quadratic sine-segmented envelope with arbitrary
number of segments. Arguments are:;
#X obj 255 3300 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3300 VAL0: begin value. Type: float.;
#X obj 255 3323 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3323 MS: line length. Type: float. Min value: 1\.;
#X obj 255 3346 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3346 VAL1: value. Type: float.;
#X obj 255 3369 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3369 [LEN1]: segment length. Type: float.;
#X obj 255 3392 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3392 [VAL2]: value. Type: float.;
#X msg 110 3417 step;
#X text 245 3417 creates step-segmented envelope with arbitrary number
of segments. Arguments are:;
#X obj 255 3455 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3455 VAL0: begin value. Type: float.;
#X obj 255 3478 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3478 MS: step length. Type: float. Min value: 1\.;
#X obj 255 3501 cnv 1 37 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3501 VAL1: value. Type: float.;
#X obj 255 3524 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3524 [LEN1]: segment length. Type: float.;
#X obj 255 3547 cnv 1 47 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3547 [VAL2]: value. Type: float.;
#X msg 110 3572 *;
#X text 245 3572 multiply all envelope points to specified value. Arguments
are:;
#X obj 255 3610 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3610 VALUE: value. Type: float.;
#X msg 110 3635 +;
#X text 245 3635 add specified value to all envelope points. Arguments
are:;
#X obj 255 3658 cnv 1 45 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3658 VALUE: value. Type: float.;
#X msg 110 3683 >>;
#X text 245 3683 shift all envelope point by specified time in milliseconds.
Arguments are:;
#X obj 255 3721 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 3721 MS: value. Type: float.;
#X obj 20 3756 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3761 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3762 1\.;
#X text 150 3762 *bang*;
#X text 245 3762 outputs current envelope.;
#X text 150 3782 *data*;
#X text 245 3782 set new envelope and output it.;
#X obj 20 3812 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 3817 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 3818 1\.;
#X text 245 3818 data output.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title env @url ceammc.env-help.pd;
#X obj 1 3868 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 3871 library: ceammc v0.9.0;
#X text 505 3883 see also:;
#X obj 579 3883 env->array;
#X obj 667 3883 env->vline;
#N canvas 10 3890 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.0;
#X text 10 54 object:;
#X text 120 54 envelope;
#X text 10 76 category:;
#X text 120 76 env;
#X text 10 98 since:;
#X text 120 98 0.5;
#X text 10 120 authors:;
#X text 120 120 Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 envelope;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 3890 pd info;
#X connect 9 0 17 0;
#X connect 11 0 17 0;
#X connect 13 0 17 0;
#X connect 15 0 17 0;
#X connect 17 0 18 0;
#X connect 10 0 17 0;
#X connect 12 0 17 0;
#X connect 14 0 17 0;
#X connect 16 0 17 0;