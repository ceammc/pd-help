<?xml version="1.0" encoding="utf-8"?>
<pddoc version="1.0">
    <object name="flow.change">
        <title>flow.change</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>rejects redundant input values</description>
            <license>GPL3 or later</license>
            <library>ceammc</library>
            <category>flow</category>
            <keywords>flow change</keywords>
            <since>0.3</since>
            <also>
                <see>change</see>
            </also>
        </meta>
        <info>
            <par>The object passes input values only when it's changed. You can "set" the current
            value, or bang to force output.</par>
            <par>Note: [list a b c( and [a b c( are different values!</par>
        </info>
        <methods>
            <method name="reset">resets state</method>
            <method name="set">sets current value, but without output</method>
        </methods>
        <properties>
            <property name="@onrepeat" type="symbol">function called when repeat occurs</property>
        </properties>
        <inlets>
            <inlet>
                <xinfo on="bang">force output current value</xinfo>
            </inlet>
        </inlets>
        <outlets>
            <outlet>output only if input changed</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
    [1 2( [3 4( [list a b( [a b( [reset(    [func fn_repeat]
    |     |     |          |     |           ^|
[F] | [B] | [S] |          |     |          [B]
|   | |   | |   |          |     |
[flow.change  @onrepeat  fn_repeat]
|                 |
[msg set]         [print passed]
|
[ (


[B] [func try_again]
|    ^|
[random.int 1 3]
|
[flow.change @onrepeat try_again]
|
[F]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
