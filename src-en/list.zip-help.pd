#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 308 50 cnv 1 457 53 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 308 50 takes n lists from n inlets (specified by argument)
and output their elements sequentially (list1-1 list2-1 list1-2 list2-2
etc.).;
#X obj 1 1 cnv 5 765 40 empty empty list.zip 20 20 0 20 -104026 -4096
0;
#X obj 549 11 list.interleave;
#X obj 682 11 list.zip;
#X msg 50 118 10 20 30;
#X msg 165 118 list a b;
#X msg 270 118 1 2 3 4 5;
#X msg 78 147 @pad;
#X msg 194 147 @clip;
#X msg 318 147 @wrap;
#X msg 395 147 @fold;
#X obj 50 190 list.zip 3 @min;
#X obj 50 219 msg set;
#X msg 50 248 ;
#X obj 20 287 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 292 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 327 1\.;
#X text 150 327 int;
#X obj 246 328 cnv 1 17 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 327 N: number of inputs. Min value: 2;
#X obj 20 357 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 362 cnv 5 98 26 empty empty properties: 4 10 0 14 -262144
-49933 0;
#X msg 110 397 @clip;
#X text 245 397 alias for "@oversize clip" property. Pad shortest list
with last element to conform longest list.;
#X msg 110 439 @fold;
#X text 245 439 alias for "@oversize fold" property. Pad shortest list
with repeated values from the end to the beginning \, then back and
so on.;
#X msg 110 496 @l0;
#X text 245 496 (readonly) Get first list. Type: list.;
#X msg 110 525 @l1;
#X text 245 525 (readonly) Get second list \, etc. Type: list.;
#X msg 110 554 @method;
#X text 245 554 Get/Set behavior \, if list have different sizes. Type:
symbol. Default value: min. Allowed values: min \, pad \, clip \, wrap
\, fold.;
#X msg 110 611 @min;
#X text 245 611 alias for "@oversize min" property. Truncates lists
to minimal common size.;
#X msg 110 653 @pad;
#X text 245 653 Get/Set pad value for pad method of resizing. Type:
atom. Default value: 0\.;
#X msg 110 695 @wrap;
#X text 245 695 alias for "@oversize wrap" property. Pad shortest list
with repeated values from the beginning.;
#X obj 20 747 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 752 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144 -49933
0;
#X text 110 753 1\.;
#X text 150 753 *list*;
#X text 245 753 input list.;
#X obj 20 783 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 788 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 789 1\.;
#X text 245 789 interleaved list.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title list @url ceammc.list-help.pd;
#X obj 1 839 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 842 library: ceammc v0.9.0;
#X text 594 854 see also:;
#X obj 668 854 list.unzip;
#N canvas 10 861 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.9.0;
#X text 10 54 object:;
#X text 120 54 list.zip;
#X text 10 76 category:;
#X text 120 76 list;
#X text 10 98 since:;
#X text 120 98 0.1;
#X text 10 120 authors:;
#X text 120 120 Alex Nadzharov \, Serge Poltavsky;
#X text 10 142 license:;
#X text 120 142 GPL3 or later;
#X text 10 164 keywords:;
#X text 120 164 list \, functional;
#X text 10 186 website:;
#X obj 120 189 ui.link @title https://github.com/uliss/pure-data @url
https://github.com/uliss/pure-data;
#X obj 120 208 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 861 pd info;
#X connect 5 0 12 0;
#X connect 8 0 12 0;
#X connect 6 0 12 1;
#X connect 9 0 12 0;
#X connect 7 0 12 2;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;