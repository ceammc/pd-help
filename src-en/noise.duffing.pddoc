<?xml version="1.0" encoding="utf-8"?>
<pddoc version="1.0">
    <object name="noise.duffing">
        <title>noise.duffing</title>
        <meta>
            <authors>
                <author>Paul Bourke</author>
                <author>Andr√© Sier</author>
            </authors>
            <description>Part of a-chaos library</description>
            <license> % </license>
            <library>ceammc</library>
            <category>noise</category>
            <keywords>noise</keywords>
            <since>.5</since>
        </meta>
        <info>
            <par>Duffing Attractor</par>
            <par>Written by Paul Bourke</par>
            <par>March 1998</par>
            <par>---</par>
            <par>The solution to the Duffing equations is often used as an example of a classic chaotic system.</par>
            <par>The Duffing system of differential equations is:</par>
            <par>===========</par>
            <par>dx / dt = y</par>
            <par>dy / dt = x - x3 - a y + b cos(w t)</par>
            <par>===================================</par>
            <par>where typically, a = 0.25, b = 0.3, w = 1</par>
            <par>The following shows a "typical" segment of (x,y) values.</par>
        </info>
        <arguments>
            <argument name="ARG0" type="float">a value (default 0.25), optional</argument>
            <argument name="ARG1" type="float">b value (default 0.3), optional</argument>
            <argument name="ARG2" type="float">w value (default 1.0), optional</argument>
            <argument name="ARG3" type="float">dt value (default 0.01), optional</argument>
        </arguments>
        <methods>
            <method name="set">
            <param type="float" name="SET" required="true">set to value</param></method>

            <method name="reset">reset state</method>

            <method name="om">
            <param type="int" name="OM" required="true">enables output when cut or fold value is changed</param></method>

            <method name="a">
            <param type="float" name="A" required="true">a value</param></method>
            <method name="b">
            <param type="float" name="B" required="true">b value</param></method>
            <method name="w">
            <param type="float" name="W" required="true">w value</param></method>
            <method name="dt">
            <param type="float" name="DT" required="true">dt value</param></method>

            <method name="fold_cut">
            <param type="int" name="FOLD_CUT" required="true">enable fold / cut value action</param></method>
        </methods>
        <inlets>
            <inlet>
                <xinfo on="bang">output value</xinfo>
            </inlet>
        </inlets>
        <outlets>
            <outlet>main outlet</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[

[T]
|
[metro 50 #metro]

  [T]         [F]
  |           |
  [om $1 #om( [set $1 #set( [reset #reset(

    [F]       [F]       [F]       [F]
    |         |         |         |
    [a $1 #a( [b $1 #b( [w $1 #w( [dt $1 #dt(

[noise.duffing #noise-obj]
|
[ui.display {i=1,o=0}]

[X a:0->noise-obj:0]
[X b:0->noise-obj:0]
[X w:0->noise-obj:0]
[X dt:0->noise-obj:0] 

[X om:0->noise-obj:0]
[X set:0->noise-obj:0]
[X reset:0->noise-obj:0]

[X metro->noise-obj]

]]>
            </pdascii>
        </example>
    </object>
</pddoc>