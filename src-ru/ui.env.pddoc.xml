<?xml version="1.0" encoding="utf-8"?>
<pddoc version="1.0">
    <object name="ui.env" type="gui">
        <title>ui.env</title>
        <meta>
            <authors>
                <author>Serge Poltavsky</author>
            </authors>
            <description>envelope editor widget</description>
            <license>GPL3 or later</license>
            <library>ceammc</library>
            <category view="link">ui</category>
            <keywords>ui envelope</keywords>
            <since>0.5</since>
        </meta>
        <info>
            <par>Editor of sound envelope function</par>
        </info>
        <mouse>
            <event editmode="false" type="left-click">on segment: toggle segment selection</event>
            <event editmode="false" type="left-click" keys="Alt">remove node under cursor</event>
            <event editmode="false" type="left-click" keys="Shift">create new node under
            cursor</event>
            <event editmode="false" type="left-click" keys="Cmd">output envelope on mouse
            DOWN</event>
            <event editmode="false" type="left-click">output envelope on mouse UP if @output_mode =
            mouse_up</event>
            <event editmode="false" type="drag">move node under the cursor. Note: node can have
            fixed Y coordinate, output envelope if @output_mode = drag</event>
            <event editmode="false" type="right-click">on segment: segment type context menu. on
            selected node: node context menu. if no selection: opens standard envelope
            menu.</event>
            <event editmode="false" type="right-click" keys="Shift">open object help</event>
            <event editmode="false" type="right-click" keys="Alt">open properties dialog</event>
            <event editmode="false" type="wheel">on selected segment: change curve of exp or
            sigmoid curve. on selected node: move node up/down</event>
            <event editmode="true" type="right-click" keys="Shift">open object help</event>
            <event editmode="true" type="right-click" keys="Alt">open properties dialog</event>
        </mouse>
        <properties>
            <property name="@length" type="float" default="400" minvalue="10" units="millisecond">
            envelope time length</property>
            <property name="@presetname" type="symbol" default="(null)">preset name for using with
            [ui.preset]</property>
            <property name="@send" type="symbol" default="(null)">send destination</property>
            <property name="@receive" type="symbol" default="(null)">receive source</property>
            <property name="@size" type="list" default="200 150">element size (width, height
            pair)</property>
            <property name="@pinned" type="int" enum="0 1" default="0">pin mode. if 1 - put element
            to the lowest level</property>
            <property name="@active_color" type="list" default="0 0.75 1 1">element active color
            (list of red, green, blue values in 0-1 range)</property>
            <property name="@line_color" type="list" default="0.1 0.1 0.1 1">line color (list of
            red, green, blue values in 0-1 range)</property>
            <property name="@background_color" type="list" default="0.93 0.93 0.93 1">element
            background color (list of red, green, blue values in 0-1 range)</property>
            <property name="@border_color" type="list" default="0.6 0.6 0.6 1">border color (list
            of red, green, blue values in 0-1 range)</property>
            <property name="@fontsize" type="int" minvalue="4" maxvalue="11" default="11">
            fontsize</property>
            <property name="@fontname" type="symbol" default="Helvetica">fontname</property>
            <property name="@fontweight" type="symbol" enum="normal bold" default="normal">font
            weight</property>
            <property name="@fontslant" type="symbol" enum="roman italic" default="roman">font
            slant</property>
            <property name="@mouse_events" type="int" enum="0 1" default="0">mouse events output
            mode. If on outputs @mouse_down, @mouse_up and @mouse_drag events</property>
            <property name="@output_mode" type="symbol" enum="mouse_up drag" default="mouse_up">
            output envelope mode. If set to "mouse_up" - output envelope on mouse up if Ctrl/Cmd
            key not pressed. If set to "drag" - output envelope on every change. Note: in any mode
            you can output evenlope with Ctrl/Cmd + mouse down.</property>
        </properties>
        <methods>
            <!-- adsr -->
            <method name="adsr">creates ADSR envelope with one stop point 
            <param name="ATTACK" type="float" units="millisecond" required="true" minvalue="0">
            attack time</param>
            <param name="DECAY" type="float" units="millisecond" required="true" minvalue="0">decay
            time</param>
            <param name="SUSTAIN" type="float" units="percent" required="true" minvalue="0"
            maxvalue="100">sustain level</param>
            <param name="RELEASE" type="float" units="millisecond" required="true" minvalue="0">
            release time</param></method>
            <!-- asr-->
            <method name="asr">creates ASR envelope with one stop point 
            <param name="ATTACK" type="float" units="millisecond" required="true" minvalue="0">
            attack time</param>
            <param name="RELEASE" type="float" units="millisecond" required="true" minvalue="0">
            release time</param></method>
            <!-- ar-->
            <method name="ar">creates AR envelope without stop points 
            <param name="ATTACK" type="float" units="millisecond" required="true" minvalue="0">
            attack time</param>
            <param name="RELEASE" type="float" units="millisecond" required="true" minvalue="0">
            release time</param></method>
            <!-- eadsr-->
            <method name="eadsr">creates exponential ADSR envelope with one stop point 
            <param name="ATTACK" type="float" units="millisecond" required="true" minvalue="0">
            attack time</param>
            <param name="ATTACK_CURVE" type="float" required="true">attack segment curve</param>
            <param name="DECAY" type="float" units="millisecond" required="true" minvalue="0">decay
            time</param>
            <param name="DECAY_CURVE" type="float" required="true">decay segment curve</param>
            <param name="SUSTAIN" type="float" units="percent" required="true" minvalue="0"
            maxvalue="100">sustain level</param>
            <param name="RELEASE" type="float" units="millisecond" required="true" minvalue="0">
            release time</param>
            <param name="RELEASE_CURVE" type="float" required="true">release segment
            curve</param></method>
            <!-- easr-->
            <method name="easr">creates exponential AR envelope with one stop point 
            <param name="ATTACK" type="float" units="millisecond" required="true" minvalue="0">
            attack time</param>
            <param name="ATTACK_CURVE" type="float" required="true">attack segment curve</param>
            <param name="RELEASE" type="float" units="millisecond" required="true" minvalue="0">
            release time</param>
            <param name="RELEASE_CURVE" type="float" required="true">release segment
            curve</param></method>
            <!-- ear-->
            <method name="ear">creates exponential AR envelope without stop points 
            <param name="ATTACK" type="float" units="millisecond" required="true">attack
            time</param>
            <param name="ATTACK_CURVE" type="float" required="true">attack segment curve</param>
            <param name="RELEASE" type="float" units="millisecond" required="true">release
            time</param>
            <param name="RELEASE_CURVE" type="float" required="true">release segment
            curve</param></method>
            <!-- step -->
            <method name="step">creates step-segmented envelope with arbitrary number of segments 
            <param name="VAL0" type="float" required="true">begin value</param>
            <param name="LEN0" type="float" units="millisecond" required="true" minvalue="1">step
            length</param>
            <param name="VAL1" type="float" required="true">value</param>
            <param name="LEN1" type="float" required="false">segment length</param>
            <param name="VAL2" type="float" required="false">value</param></method>
            <!-- line -->
            <method name="line">creates line-segmented envelope with arbitrary number of segments 
            <param name="VAL0" type="float" required="true">begin value</param>
            <param name="LEN0" type="float" units="millisecond" required="true" minvalue="1">line
            length</param>
            <param name="VAL1" type="float" required="true">value</param>
            <param name="LEN1" type="float" required="false">segment length</param>
            <param name="VAL2" type="float" required="false">value</param></method>
            <!-- sin2 -->
            <method name="sin2">creates quadratic sine-segmented envelope with arbitrary number of
            segments 
            <param name="VAL0" type="float" required="true">begin value</param>
            <param name="LEN0" type="float" units="millisecond" required="true" minvalue="1">line
            length</param>
            <param name="VAL1" type="float" required="true">value</param>
            <param name="LEN1" type="float" required="false">segment length</param>
            <param name="VAL2" type="float" required="false">value</param></method>
            <!-- exp -->
            <method name="exp">creates exponential-segmented envelope with arbitrary number of
            segments 
            <param name="VAL0" type="float" required="true">begin value</param>
            <param name="LEN0" type="float" units="millisecond" required="true" minvalue="1">line
            length</param>
            <param name="CURVE0" type="float" required="true">segment curve</param>
            <param name="VAL1" type="float" required="true">value</param>
            <param name="LEN1" type="float" required="false">segment length</param>
            <param name="CURVE1" type="float" required="false">segment curve</param>
            <param name="VAL2" type="float" required="false">value</param></method>
            <!-- sigmoid -->
            <method name="sigmoid">creates sigmoid-segmented envelope with arbitrary number of
            segments 
            <param name="VAL0" type="float" required="true">begin value</param>
            <param name="LEN0" type="float" units="millisecond" required="true" minvalue="1">line
            length</param>
            <param name="CURVE0" type="float" required="true">segment curve</param>
            <param name="VAL1" type="float" required="true">value</param>
            <param name="LEN1" type="float" required="false">segment length</param>
            <param name="CURVE1" type="float" required="false">segment curve</param>
            <param name="VAL2" type="float" required="false">value</param></method>
            <!-- presets -->
            <method name="clear">clear specified preset 
            <param type="int" name="IDX" required="true" minvalue="0">preset index</param></method>
            <method name="load">loads specified preset 
            <param type="int" name="IDX" required="true">preset index</param></method>
            <method name="store">stores specified preset 
            <param type="int" name="IDX" required="true">preset index</param></method>
            <!-- common-->
            <method name="pos">set UI element position 
            <param name="X" type="float" required="true">top left x-coord</param>
            <param name="Y" type="float" required="true">top right y-coord</param></method>
        </methods>
        <inlets>
            <inlet>
                <xinfo on="data">set new envelope and output it</xinfo>
                <xinfo on="bang">output current envelope</xinfo>
            </inlet>
        </inlets>
        <outlets>
            <outlet>envelope</outlet>
        </outlets>
        <example>
            <pdascii>
<![CDATA[
[ar 10 450, bang(
|
[envelope] [adsr 10 20 15 80( [eadsr 180 -2 20 4 30 100 -8(
|          |                  |
|          | [asr 300 400(    | [easr 200 2 30 7(
|          | |                | |
|          | | [ar 10 80(     | | [ear 10 -4 70 -6(
|          | | |              | | |
|          | | |              | | |
|          | | |              | | |
[ui.env               @size 240 60]  /*Cmd+Click to play envelope*/
|
|
|
|
[env->vline @sync 1]
|
[vline~]  [osc~ 1000]
|  .______/
[*~]
|
[ui.gain~ @size 120 16] [ui.dsp~]
|\
[dac~]
]]>
            </pdascii>
        </example>
    </object>
</pddoc>
